@model ConcertGo.ViewModels.CreateMediaViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Media</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Comment, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>
        
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Files, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Files, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
            </div>
        </div>*@
        
        @Html.HiddenFor(model => model.Files)
        
        <input type="file" name="UploadFile" id="txtUploadFile" /> <!-- todo we want multiple!!! -->
        
        @Html.HiddenFor(model => model.ConcertId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script> // todo you don't belong here...
    window.onload = function() {
        $('#txtUploadFile').on('change',
            function(e) {
                var files = e.target.files;

                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();

                        data.append("File", files[0]);
                        data.append("Date", files[0].lastModified);

                        $.ajax({
                            type: "POST",
                            url: "/Media/FileHandler",
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function (result) {
                                if (result !== "error") {
                                    $("#Files")[0].value += result + ",";
                                } else {
                                    console.log("There was an error...");
                                }

                                console.log(result);
                            },
                            error: function(xhr, status, p3, p4) {
                                var err = "Error " + " " + status + " " + p3 + " " + p4;
                                if (xhr.responseText && xhr.responseText[0] === "{") {
                                    var fileId = JSON.parse(xhr.responseText).Message.toLowerCase();
                                    if (json !== "error") {
                                        $("#Files")[0].value += fileId + ",";
                                    } else {
                                        console.log("There was an error...");
                                    }
                                }
                            }
                        });
                    } else {
                        alert("This browser doesn't support HTML5 file uploads!");
                    }
                }
            });
    };
</script>